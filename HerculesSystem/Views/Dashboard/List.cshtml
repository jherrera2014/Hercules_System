@model IEnumerable<dynamic>

@{
    ViewBag.Title = "List";
}

<link href="@Url.Content("~/Content/Dashboard/List.css")" rel="stylesheet" type="text/css" />

<h2>Dashboard</h2>
<div>
    <div class="demo-section k-header">
            <h4>Filter</h4>
            <p>
                 @(Html.Kendo().DropDownList()
                    .Name("ZoneDropDownList") //The name of the dropdownlist is mandatory. It specifies the "id" attribute of the widget.
                    .DataTextField("ZoneName") //Specifies which property of the Product to be used by the dropdownlist as a text.
                    .DataValueField("ID") //Specifies which property of the Product to be used by the dropdownlist as a value.
                    .HtmlAttributes(new { style = "width:300px" })
                    .OptionLabel("Zone")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetZone", "Dashboard"); //Set the Action and Controller name
                        }) ; //If true the DataSource will not filter the data on the client.
                    })
                    
                 )
            </p>
            <p>
                @(Html.Kendo().DropDownList()
                        .Name("LoggerDropDownList") //The name of the dropdownlist is mandatory. It specifies the "id" attribute of the widget.
                        .DataTextField("LoggerName") //Specifies which property of the Product to be used by the dropdownlist as a text.
                        .DataValueField("LoggerID") //Specifies which property of the Product to be used by the dropdownlist as a value.
                        .HtmlAttributes(new { style = "width:300px" })
                        .OptionLabel("Logger")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetLogger", "Dashboard")//Set the Action and Controller name
                               .Data("filterLogger");
                            })
                            .ServerFiltering(true); //If true the DataSource will not filter the data on the client.
                        })
                        .Enable(false)
                        .AutoBind(false)
                        .CascadeFrom("ZoneDropDownList")
                )
            </p>

         <input type="button" class="k-button k-primary" value="Filter" onclick="location.href='@Url.Action("FilterButton", "Dashboard")'" />
        </div>

    <div id="grid" class="grid">

    @(Html.Kendo().Grid(Model).Name("Dashboars")
          .DataSource(ds => ds.Ajax()
                .Model(c =>
                {
                    c.Id("IDLogger");
                    c.Field("IDAlarm", typeof(int));
                    c.Field("LoggerName", typeof(string));
                    c.Field("AlarmType", typeof(string));
                    c.Field("LoggerSerialNumber", typeof(int));
                    c.Field("LoggerType", typeof(string));
                    c.Field("LoggerSMS", typeof(string));
                })
                .Read(r => r.Action("Read", "Dashboard"))
                .Create(u => u.Action("Create", "Home"))

                )
                .Columns(columns =>
                {
                    columns.Bound("IDAlarm").Title("ID Alarm");
                    columns.Bound("LoggerName").Title("Logger Name");
                    columns.Bound("AlarmType").Title("AlarmType");
                    columns.Bound("LoggerSerialNumber").Title("Logger Serial Number");
                    columns.Bound("LoggerType").Title("Logger Type");
                    columns.Bound("LoggerSMS").Title("Logger SMS");
                    columns.Command(command =>
                    {
                        command.Custom("View").Click("ViewDetail");
                    });
                })
                .Editable(editable => editable.TemplateName("ProductItem").Mode(GridEditMode.PopUp))
                .Sortable()
                .Filterable()
                .Pageable()             
        )
    
          
  

    </div>

    <script type="text/javascript">
        var detailsTemplate = kendo.template($("#template").html());

        function FilterGrid() {
            var Zone = $("#ZoneDropDownList").val();
      
            var Logger = $("#LoggerDropDownList").val();
            window.location.href = "@Url.Action("FilterButton", "Logger")?zone=" + Zone +"&logger="+Logger;
        }

    
        function filterLogger() {
            return {
                ZoneDropDownList: $("#ZoneDropDownList").val()
            };
        }

        $(document).ready(function () {
            var zones = $("#ZoneDropDownList").data("kendoDropDownList"),
                logger = $("#LoggerDropDownList").data("kendoDropDownList");
        });

        function ViewDetail(e) {
            e.preventDefault();
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            var stockReceiptId = dataItem.IDAlarm;
            window.location.href = "@Url.Action("Detail", "Dashboard")?ID=" + stockReceiptId;

        }
    </script>
</div>


