@model HerculesSystem.Models.sites

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("CreateSite","Sites"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <p>
        @Html.TextBoxFor(model => model.Address, new { @class = "form-control", placeholder = "Adress", style = "width:170px" })
        @Html.ValidationMessageFor(model => model.Address)
    </p>

    <p>

        @(Html.Kendo().DropDownListFor(model => model.OwnerAccount)
                    .DataTextField("UserName") //Specifies which property of the Product to be used by the dropdownlist as a text.
                    .DataValueField("ID") //Specifies which property of the Product to be used by the dropdownlist as a value.
                    .HtmlAttributes(new { style = "width:170px" })
                    .OptionLabel("Owner")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetUser", "Helper"); //Set the Action and Controller name
                        }); //If true the DataSource will not filter the data on the client.
                    })
        )

    </p>

    <p>
        @(Html.Kendo().DropDownListFor(m => m.ZoneID)
              .Name("ZoneID")
              .DataTextField("ZoneName")
              .DataValueField("ID")
               .HtmlAttributes(new { style = "width:170px" })
              .OptionLabel("Zone")
              .DataSource(source =>
                  {
                      source.Read(read =>
                      {
                          read.Action("GetZone", "Helper"); //Set the Action and Controller name
                      }); //If true the DataSource will not filter the data on the client.
                  })
        )

    </p>
    
    <p>
        @(Html.CheckBoxFor(model => model.WithLogger)

        )
        @(Html.Label("Asociar a Logger"))
    </p>
    
    <p>
        @(Html.Kendo().DropDownListFor(m => m.LoggerID)
              .Name("LoggerID")
              .Enable(false)
              .DataTextField("LoggerSMS")
              .DataValueField("ID")
               .HtmlAttributes(new { style = "width:170px" })
              .DataSource(source =>
                  {
                      source.Read(read =>
                      {
                          read.Action("GetOnlyLoggers", "Helper"); //Set the Action and Controller name
                      }); //If true the DataSource will not filter the data on the client.
                  })

        )

    </p>
    
    <p>
        <style scoped>
            .k-button .k-image {
                height: 20px;
                width: 20px;
            }
            /*#map {
                display:none;*/

            }
            
        </style>

        @(Html.Kendo().Button()
        .Name("imageButton")
        .HtmlAttributes(new { type = "button" })
        .ImageUrl(Url.Content("~/Content/images/Location.png"))
        .Content("Map View")
        .SpriteCssClass("k.image")
        )

        @Html.TextBoxFor(model => model.LatEast, new { @class = "form-control", placeholder = "Lat East", style = "width:170px" })
        @Html.ValidationMessageFor(model => model.LatEast)
    </p>
    
    <p>

        @Html.TextBoxFor(model => model.LongNorth, new { @class = "form-control", placeholder = "Long North", style = "width:170px" })
        @Html.ValidationMessageFor(model => model.LongNorth)

      
    </p>
    
    <p>

        @Html.TextBoxFor(model => model.HeightAOD, new { @class = "form-control", placeholder = "Height AOD", style = "width:170px" })
        @Html.ValidationMessageFor(model => model.HeightAOD)
    </p>


    <p>
        @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", placeholder = "Notes", style = "width:170px" })
        @Html.ValidationMessageFor(model => model.Notes)
    </p>

    <input type="submit" value="Create" class="btn btn-default" width="170" id="btnCreate" />

    <div id="map" style="width: 700px; height: 500px; " />

}



<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false" type="text/javascript"></script>
<script type="text/javascript">

    $(document).ready(function () {
        var site = $("#LoggerID").data("kendoDropDownList");

        $("#WithLogger").change(function () {
            var isChecked = $(this).is(':checked');
            site.enable(isChecked);
        });


        var ne = new google.maps.LatLng(-20.009901, -71.258046);
        var sw = new google.maps.LatLng(-20.009901, -71.258046);
        var bounds = new google.maps.LatLngBounds(ne, sw);

        var image2 = "@Url.Content("~/Content/images/Location.png")";

        $("#imageButton").kendoButton({
            imageUrl: image2
        });


        var options = {
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        var googleMap = new google.maps.Map($("#map")[0], options);
        var infoWindow = new google.maps.InfoWindow({ content: "Cargando..." });


        $.ajax({

            success: function () {

                    google.maps.event.addListener(googleMap, 'click', function (e) {

                        document.getElementById("LatEast").value = e.latLng.lat();
                        document.getElementById("LongNorth").value = e.latLng.lng();
                      
                    });
            }
        });

        googleMap.setCenter(bounds.getCenter());
        googleMap.setZoom(3);
       

    });

    var button = document.getElementById('imageButton');
    var div = document.getElementById('map');
    div.style.display = 'none'
    button.onclick = function () {
        var div = document.getElementById('map');
        if (div.style.display !== 'none') {
            div.style.display = 'none';
            
        }
        else {
            div.style.display = 'block';
            initialize();
        }
    };

    function initialize() {
        // create the map

        var myOptions = {
            zoom: 3,
            center: new google.maps.LatLng(0.0, 0.0),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        }
        var options = {
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        $.ajax({

            success: function () {

                google.maps.event.addListener(map, 'click', function (e) {

                    document.getElementById("LatEast").value = e.latLng.lat();
                    document.getElementById("LongNorth").value = e.latLng.lng();

                });
            }
        });

        map = new google.maps.Map(document.getElementById("map"),
                                    myOptions);

    }
   
                 


</script>











@*<p>
    @(Html.Kendo().DateTimePicker()
              .Name("DateCreated")
              .Value(DateTime.Now)
              .HtmlAttributes(new { style = "width:175px" })
    )
</p>

<p>
    @(Html.Kendo().DateTimePicker()
              .Name("DateUpdated")
              .Value(DateTime.Now)
              .HtmlAttributes(new { style = "width:175px" })
    )
</p>

<p>
    @(Html.Kendo().DateTimePicker()
              .Name("DateStart")
              .Value(DateTime.Now)
              .HtmlAttributes(new { style = "width:175px" })
    )
</p>

<p>
    @(Html.Kendo().DateTimePicker()
              .Name("DateEnd")
              .Value(DateTime.Now)
              .HtmlAttributes(new { style = "width:175px" })
    )
</p>*@



